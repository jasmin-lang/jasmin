inline
fn fillhalf(stack u64[16] blk, reg u64 cond) -> stack u64[16] {
  inline int i;

  for i = 0 to 8 {
    blk[2*i + (uint)cond] = i;
  }
  
  return blk;
}


export
fn array() -> reg u64 {
  inline int i;
  reg u64 cond, res;
  stack u64[16] blk;

  cond = 0;
  blk = fillhalf(blk, cond);
  cond = 1;
  blk = fillhalf(blk, cond);

  res = 0;
  for i = 0 to 16 {
    res += blk[i];
  }
  
  return res;
}
