export
fn mov() -> reg u32 {
    reg u32 x;
    x = 0;
    x = !x;

    x = !(x << 0);
    x = !(x << 31);
    x = !(x >> 1);
    x = !(x >> 31); // Should check 32.
    x = !(x >>s 1);
    x = !(x >>s 31); // Should check 32.
    // Should check ROR, RXR

    // Set flags.
    reg bool n, z, v, c;
    n, z, c, v, _ = #MOVS(x);

    // Conditions.
    x = !x if z;            // EQ
    x = !x if !z;           // NE
    x = !x if c;            // CS
    x = !x if !c;           // CC
    x = !x if n;            // MI
    x = !x if !n;           // PL
    x = !x if v;            // VS
    x = !x if !v;           // VC
    x = !x if c && !z;      // HI
    x = !x if !c || z;      // LS
    x = !x if n == v;       // GE
    x = !x if n != v;       // LT
    x = !x if !z && n == v; // GT
    x = !x if z || n != v;  // LE

    reg u32 res;
    res = x;
    return res;
}
