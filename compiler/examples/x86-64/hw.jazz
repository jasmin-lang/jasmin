inline
fn cswap(stack u64[4] x, stack u64[4] y, reg u64 swap)
-> (stack u64[4] , stack u64[4]) {

  reg u64 tmp1, tmp2, mask;
  inline int i;

  mask = swap * 0xffffffffffffffff;

  for i = 0 to 4 {
    tmp1   = x[i];
    tmp1  ^= y[i];
    tmp1  &= mask;
    x[i]  ^= tmp1;
    tmp2   = y[i];
    tmp2  ^= tmp1;
    y[i] = tmp2;
  }
  return x, y;
}

export
fn swap4 (reg u64 xp, reg u64 yp, reg u64 swap, reg u64 sb) {
stack u64[4] xc, yc;
inline int i;

for i = 0 to 4 {
xc[i] = [xp + 8 * i];
yc[i] = [yp + 8 * i];
}

swap >>= sb & 63;

xc, yc = cswap(xc, yc, swap);

for i = 0 to 4 {
[xp + 8 * i] = xc[i];
[yp + 8 * i] = yc[i];
}
}
