// * Implementation of montgomery ladder for curve25519

param int rem_p = 2; /* 2^(4*64) mod p      */

// ** addition
// ************************************************************************

inline
fn add(reg u64[4] x, stack u64[4] ya) -> reg u64[4] {

  reg u64[4] y;
  reg u64 add0;
  reg u64 add1;
  reg bool cf;
  inline int i;

  for i = 0 to 4 {
//    y[i] = ya[i];
    if   (i == 0) { cf, x[0] += ya[0]; }
    else         { cf, x[i] += ya[i] + cf; } 
  }

/*  add0 = 0;
  add1 = rem_p;
  add1 = add0 if !cf;

  for i = 0 to 4 {
    if (i == 0) {
      cf, x[0] += add1;
    } else {
      cf, x[i] += add0 + cf;
    }
  }

  add0 = add1 if cf;
  x[0] += add0; */

  return y;
}

export fn eadd() {
  reg u64[4] x;
  stack u64[4] ya;
  reg u64[4] z;
  inline int i;
  for i = 0 to 4 {
    x[i] = 0;
    ya[i] = 1;
  }  
  z = add(x, ya);
}
