fn test1() -> inline int {

  inline int i;
  inline int j;


  j = 0;
  for i = 0 to 4 {
    j = j + i;
  }

  return j;
}

fn test2() -> inline u64 {

  inline int i;
  inline u64 j;


  j = 0;
  for i = 0 to 4 {
    j = j + i;
  }

  return j;
}


export fn test3() -> reg u64 {

  reg u64 i;
  reg u64 j;
  inline int tmp;

  tmp = test1();
  j = tmp;
  i = test2();
  while (j <= 12) {
    j = j + i;
    i += 1;
  }

  return j;
}
