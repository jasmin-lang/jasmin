param int rlog = 18;

export fn reduce(reg u64 a) -> reg u64
{
  reg u64 u;
  u = (1 << rlog) - 1 ;
  return u;
}

export
fn constant_folding(reg u64 x) -> reg u64 {
  inline int i;
  stack u64[128] t;
  reg u64 r;
  for i = 0 to 128 {
    t[i] = x;
  }
  for i = 0 to 128 {
    r = t[i];
    r >>s= i & 63;
    t[i] = r;
  }
  r = 0;
  for i = 0 to 128 {
    x = t[i];
    r |= x;
  }
  return r;
}
