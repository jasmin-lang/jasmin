inline
fn squarea(stack u64[1] x) -> stack u64[1] {
  reg u64[1] r;
  stack u64[1] ra;
  inline int i;
  for i = 0 to 1 { r[i] = x[i]; }
  ra = r;
  return ra;
}

inline
fn invert(stack u64[1] xa) {
  stack u64[1] t;
  reg u64 k;
  t = xa;
  k = 1; while { t = squarea(t); k+=1; } (k<5)
}

export fn scalarmult() {
  stack u64[1] za;

  inline int i;
  for i = 0 to 1 { za[i] = i; }
  invert(za);
}
