fn init (reg ptr u64[3] p) -> reg ptr u64[3] {
   inline int i;
   for i = 0 to 3 {
      p[i] = i;
   }
   return p;
}

fn sum (reg const ptr u64[3] p) -> reg u64 {
   inline int i;
   reg u64 r;
   r = 0;
   for i = 0 to 3 {
      r = p[i];
   }
   return r;
}

export fn foo1() -> reg u64 {
  stack u64[3] s;
  reg u64 r;
  s=init(s);
  r = sum(s);
  return r;
}
