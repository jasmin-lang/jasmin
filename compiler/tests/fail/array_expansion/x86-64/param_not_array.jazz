fn f (reg u64[2] r) -> reg u64 {
  reg u64 res;
  res = r[0];
  res += r[1];
  return res;
}

export fn main () -> reg u64 {
  reg u64 res;
  reg u64[4] r;

  inline int i;
  for i = 0 to 4 {
    r[i] = i;
  }

  reg bool cf;
  ?{cf} = #CMP(r[1], r[2]);
  res = f(cf ? r[0:2] : r[1:2]);

  return res;
}
