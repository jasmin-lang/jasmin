(* ** AES-NI *)
(* From eclib/AES.ec *)

(* ** Imports and settings *)

From mathcomp Require Import all_ssreflect ssralg ssrnum.
From mathcomp Require Import word_ssrZ word.
Require Import word.
Require Import ZArith utils.
Import Utf8.

Set Implicit Arguments.
Unset Strict Implicit.
Unset Printing Implicit Defensive.

Import ssrnat.

Local Open Scope Z_scope.

(* -------------------------------------------------------------- *)

Definition Sbox (v1 : u8) : u8 :=
  wrepr U8 match toword v1 with
  | 0 => 99    | 1 => 124   | 2 => 119   | 3 => 123   | 4 => 242
  | 5 => 107   | 6 => 111   | 7 => 197   | 8 => 48    | 9 => 1
  | 10 => 103  | 11 => 43   | 12 => 254  | 13 => 215  | 14 => 171
  | 15 => 118  | 16 => 202  | 17 => 130  | 18 => 201  | 19 => 125
  | 20 => 250  | 21 => 89   | 22 => 71   | 23 => 240  | 24 => 173
  | 25 => 212  | 26 => 162  | 27 => 175  | 28 => 156  | 29 => 164
  | 30 => 114  | 31 => 192  | 32 => 183  | 33 => 253  | 34 => 147
  | 35 => 38   | 36 => 54   | 37 => 63   | 38 => 247  | 39 => 204
  | 40 => 52   | 41 => 165  | 42 => 229  | 43 => 241  | 44 => 113
  | 45 => 216  | 46 => 49   | 47 => 21   | 48 => 4    | 49 => 199
  | 50 => 35   | 51 => 195  | 52 => 24   | 53 => 150  | 54 => 5
  | 55 => 154  | 56 => 7    | 57 => 18   | 58 => 128  | 59 => 226
  | 60 => 235  | 61 => 39   | 62 => 178  | 63 => 117  | 64 => 9
  | 65 => 131  | 66 => 44   | 67 => 26   | 68 => 27   | 69 => 110
  | 70 => 90   | 71 => 160  | 72 => 82   | 73 => 59   | 74 => 214
  | 75 => 179  | 76 => 41   | 77 => 227  | 78 => 47   | 79 => 132
  | 80 => 83   | 81 => 209  | 82 => 0    | 83 => 237  | 84 => 32
  | 85 => 252  | 86 => 177  | 87 => 91   | 88 => 106  | 89 => 203
  | 90 => 190  | 91 => 57   | 92 => 74   | 93 => 76   | 94 => 88
  | 95 => 207  | 96 => 208  | 97 => 239  | 98 => 170  | 99 => 251
  | 100 => 67  | 101 => 77  | 102 => 51  | 103 => 133 | 104 => 69
  | 105 => 249 | 106 => 2   | 107 => 127 | 108 => 80  | 109 => 60
  | 110 => 159 | 111 => 168 | 112 => 81  | 113 => 163 | 114 => 64
  | 115 => 143 | 116 => 146 | 117 => 157 | 118 => 56  | 119 => 245
  | 120 => 188 | 121 => 182 | 122 => 218 | 123 => 33  | 124 => 16
  | 125 => 255 | 126 => 243 | 127 => 210 | 128 => 205 | 129 => 12
  | 130 => 19  | 131 => 236 | 132 => 95  | 133 => 151 | 134 => 68
  | 135 => 23  | 136 => 196 | 137 => 167 | 138 => 126 | 139 => 61
  | 140 => 100 | 141 => 93  | 142 => 25  | 143 => 115 | 144 => 96
  | 145 => 129 | 146 => 79  | 147 => 220 | 148 => 34  | 149 => 42
  | 150 => 144 | 151 => 136 | 152 => 70  | 153 => 238 | 154 => 184
  | 155 => 20  | 156 => 222 | 157 => 94  | 158 => 11  | 159 => 219
  | 160 => 224 | 161 => 50  | 162 => 58  | 163 => 10  | 164 => 73
  | 165 => 6   | 166 => 36  | 167 => 92  | 168 => 194 | 169 => 211
  | 170 => 172 | 171 => 98  | 172 => 145 | 173 => 149 | 174 => 228
  | 175 => 121 | 176 => 231 | 177 => 200 | 178 => 55  | 179 => 109
  | 180 => 141 | 181 => 213 | 182 => 78  | 183 => 169 | 184 => 108
  | 185 => 86  | 186 => 244 | 187 => 234 | 188 => 101 | 189 => 122
  | 190 => 174 | 191 => 8   | 192 => 186 | 193 => 120 | 194 => 37
  | 195 => 46  | 196 => 28  | 197 => 166 | 198 => 180 | 199 => 198
  | 200 => 232 | 201 => 221 | 202 => 116 | 203 => 31  | 204 => 75
  | 205 => 189 | 206 => 139 | 207 => 138 | 208 => 112 | 209 => 62
  | 210 => 181 | 211 => 102 | 212 => 72  | 213 => 3   | 214 => 246
  | 215 => 14  | 216 => 97  | 217 => 53  | 218 => 87  | 219 => 185
  | 220 => 134 | 221 => 193 | 222 => 29  | 223 => 158 | 224 => 225
  | 225 => 248 | 226 => 152 | 227 => 17  | 228 => 105 | 229 => 217
  | 230 => 142 | 231 => 148 | 232 => 155 | 233 => 30  | 234 => 135
  | 235 => 233 | 236 => 206 | 237 => 85  | 238 => 40  | 239 => 223
  | 240 => 140 | 241 => 161 | 242 => 137 | 243 => 13  | 244 => 191
  | 245 => 230 | 246 => 66  | 247 => 104 | 248 => 65  | 249 => 153
  | 250 => 45  | 251 => 15  | 252 => 176 | 253 => 84  | 254 => 187
  | 255 => 22  | _ => 0
  end.

Definition InvSbox (v1 : u8) :=
  wrepr U8 match toword v1 with
  | 0 => 82    | 1 => 9     | 2 => 106   | 3 => 213   | 4 => 48
  | 5 => 54    | 6 => 165   | 7 => 56    | 8 => 191   | 9 => 64
  | 10 => 163  | 11 => 158  | 12 => 129  | 13 => 243  | 14 => 215
  | 15 => 251  | 16 => 124  | 17 => 227  | 18 => 57   | 19 => 130
  | 20 => 155  | 21 => 47   | 22 => 255  | 23 => 135  | 24 => 52
  | 25 => 142  | 26 => 67   | 27 => 68   | 28 => 196  | 29 => 222
  | 30 => 233  | 31 => 203  | 32 => 84   | 33 => 123  | 34 => 148
  | 35 => 50   | 36 => 166  | 37 => 194  | 38 => 35   | 39 => 61
  | 40 => 238  | 41 => 76   | 42 => 149  | 43 => 11   | 44 => 66
  | 45 => 250  | 46 => 195  | 47 => 78   | 48 => 8    | 49 => 46
  | 50 => 161  | 51 => 102  | 52 => 40   | 53 => 217  | 54 => 36
  | 55 => 178  | 56 => 118  | 57 => 91   | 58 => 162  | 59 => 73
  | 60 => 109  | 61 => 139  | 62 => 209  | 63 => 37   | 64 => 114
  | 65 => 248  | 66 => 246  | 67 => 100  | 68 => 134  | 69 => 104
  | 70 => 152  | 71 => 22   | 72 => 212  | 73 => 164  | 74 => 92
  | 75 => 204  | 76 => 93   | 77 => 101  | 78 => 182  | 79 => 146
  | 80 => 108  | 81 => 112  | 82 => 72   | 83 => 80   | 84 => 253
  | 85 => 237  | 86 => 185  | 87 => 218  | 88 => 94   | 89 => 21
  | 90 => 70   | 91 => 87   | 92 => 167  | 93 => 141  | 94 => 157
  | 95 => 132  | 96 => 144  | 97 => 216  | 98 => 171  | 99 => 0
  | 100 => 140 | 101 => 188 | 102 => 211 | 103 => 10  | 104 => 247
  | 105 => 228 | 106 => 88  | 107 => 5   | 108 => 184 | 109 => 179
  | 110 => 69  | 111 => 6   | 112 => 208 | 113 => 44  | 114 => 30
  | 115 => 143 | 116 => 202 | 117 => 63  | 118 => 15  | 119 => 2
  | 120 => 193 | 121 => 175 | 122 => 189 | 123 => 3   | 124 => 1
  | 125 => 19  | 126 => 138 | 127 => 107 | 128 => 58  | 129 => 145
  | 130 => 17  | 131 => 65  | 132 => 79  | 133 => 103 | 134 => 220
  | 135 => 234 | 136 => 151 | 137 => 242 | 138 => 207 | 139 => 206
  | 140 => 240 | 141 => 180 | 142 => 230 | 143 => 115 | 144 => 150
  | 145 => 172 | 146 => 116 | 147 => 34  | 148 => 231 | 149 => 173
  | 150 => 53  | 151 => 133 | 152 => 226 | 153 => 249 | 154 => 55
  | 155 => 232 | 156 => 28  | 157 => 117 | 158 => 223 | 159 => 110
  | 160 => 71  | 161 => 241 | 162 => 26  | 163 => 113 | 164 => 29
  | 165 => 41  | 166 => 197 | 167 => 137 | 168 => 111 | 169 => 183
  | 170 => 98  | 171 => 14  | 172 => 170 | 173 => 24  | 174 => 190
  | 175 => 27  | 176 => 252 | 177 => 86  | 178 => 62  | 179 => 75
  | 180 => 198 | 181 => 210 | 182 => 121 | 183 => 32  | 184 => 154
  | 185 => 219 | 186 => 192 | 187 => 254 | 188 => 120 | 189 => 205
  | 190 => 90  | 191 => 244 | 192 => 31  | 193 => 221 | 194 => 168
  | 195 => 51  | 196 => 136 | 197 => 7   | 198 => 199 | 199 => 49
  | 200 => 177 | 201 => 18  | 202 => 16  | 203 => 89  | 204 => 39
  | 205 => 128 | 206 => 236 | 207 => 95  | 208 => 96  | 209 => 81
  | 210 => 127 | 211 => 169 | 212 => 25  | 213 => 181 | 214 => 74
  | 215 => 13  | 216 => 45  | 217 => 229 | 218 => 122 | 219 => 159
  | 220 => 147 | 221 => 201 | 222 => 156 | 223 => 239 | 224 => 160
  | 225 => 224 | 226 => 59  | 227 => 77  | 228 => 174 | 229 => 42
  | 230 => 245 | 231 => 176 | 232 => 200 | 233 => 235 | 234 => 187
  | 235 => 60  | 236 => 131 | 237 => 83  | 238 => 153 | 239 => 97
  | 240 => 23  | 241 => 43  | 242 => 4   | 243 => 126 | 244 => 186
  | 245 => 119 | 246 => 214 | 247 => 38  | 248 => 225 | 249 => 105
  | 250 => 20  | 251 => 99  | 252 => 85  | 253 => 33  | 254 => 12
  | 255 => 125 | _ => 0
  end.

(* NOTE: SubWord clashes with subword *)
Definition SubWord (v1 : u32) :=
  make_vec U32 (map Sbox (split_vec U8 v1)).
Definition InvSubWord (v1 : u32) :=
  make_vec U32 (map InvSbox (split_vec U8 v1)).
Definition RotWord (v1 : u32) :=
  make_vec U32 [:: (subword (1 * U8) U8 v1); subword (2 * U8) U8 v1; subword (3 * U8) U8 v1; subword (0 * U8) U8 v1].

Definition to_matrix (s : u128) :=
  let s_ := fun i j => (subword (i * U8) U8 (subword (j * U32) U32 s)) in
  (s_ 0 0, s_ 0 1, s_ 0 2, s_ 0 3,
    s_ 1 0, s_ 1 1, s_ 1 2, s_ 1 3,
    s_ 2 0, s_ 2 1, s_ 2 2, s_ 2 3,
    s_ 3 0, s_ 3 1, s_ 3 2, s_ 3 3)%nat.

Definition to_state (m : u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8 * u8) :=
  let '(s00, s01, s02, s03,
        s10, s11, s12, s13,
        s20, s21, s22, s23,
        s30, s31, s32, s33) := m in
  let c0 := make_vec U32 [:: s00; s10; s20; s30] in
  let c1 := make_vec U32 [:: s01; s11; s21; s31] in
  let c2 := make_vec U32 [:: s02; s12; s22; s32] in
  let c3 := make_vec U32 [:: s03; s13; s23; s33] in
  make_vec U128 [:: c0; c1; c2; c3].

Definition SubBytes (s : u128) :=
  make_vec U128 (map SubWord (split_vec U32 s)).
Definition InvSubBytes (s : u128) :=
  make_vec U128 (map InvSubWord (split_vec U32 s)).

Definition ShiftRows (s : u128) :=
 let '(s00, s01, s02, s03,
       s10, s11, s12, s13,
       s20, s21, s22, s23,
       s30, s31, s32, s33) := to_matrix s in
 to_state (s00, s01, s02, s03,
           s11, s12, s13, s10,
           s22, s23, s20, s21,
           s33, s30, s31, s32).

Definition InvShiftRows (s : u128) :=
 let '(s00, s01, s02, s03,
       s11, s12, s13, s10,
       s22, s23, s20, s21,
       s33, s30, s31, s32) := to_matrix s in
 to_state
    (s00, s01, s02, s03,
     s10, s11, s12, s13,
     s20, s21, s22, s23,
     s30, s31, s32, s33).

(* TODO: Implement these *)
Parameter MixColumns : u128 -> u128.
Parameter InvMixColumns : u128 -> u128.

Definition wAESDEC (state rkey : u128) :=
  let state := InvShiftRows state in
  let state := InvSubBytes state in
  let state := InvMixColumns state in
  wxor state rkey.

Definition wAESDECLAST (state rkey : u128) :=
  let state := InvShiftRows state in
  let state := InvSubBytes state in
  wxor state rkey.

Definition wAESENC (state rkey : u128) :=
  let state := ShiftRows state in
  let state := SubBytes state in
  let state := MixColumns state in
  wxor state rkey.

Definition wAESENCLAST (state rkey : u128) :=
  let state := ShiftRows state in
  let state := SubBytes state in
  wxor state rkey.

Notation wAESIMC := InvMixColumns.

Definition wAESKEYGENASSIST (v1 : u128) (v2 : u8) :=
  let rcon := zero_extend U32 v2 in
  let x1 := subword (1 * U32) U32 v1 in
  let x3 := subword (3 * U32) U32 v1 in
  let y0 := SubWord x1 in
  let y1 := wxor (RotWord (SubWord x1)) rcon in
  let y2 := SubWord x3 in
  let y3 := wxor (RotWord (SubWord x3)) rcon in
  make_vec U128 [:: y0; y1; y2; y3].

Definition wAESENC_ (state rkey: u128) :=
  let state := SubBytes state in
  let state := ShiftRows state in
  let state := MixColumns state in
  wxor state rkey.

Definition wAESENCLAST_ (state rkey: u128) :=
  let state := SubBytes state in
  let state := ShiftRows state in
  wxor state rkey.

Definition wAESDEC_ (state rkey: u128) :=
  let state := InvShiftRows state in
  let state := InvSubBytes state in
  let state := wxor state rkey in
  InvMixColumns state.
